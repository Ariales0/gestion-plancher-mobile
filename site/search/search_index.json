{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Bienvenue Bienvenue sur la documentation de notre projet ! Cette documentation a pour but de vous aider \u00e0 comprendre et utiliser notre produit efficacement. Table des mati\u00e8res Introduction Contributeurs Introduction Ce projet est une application mobile construit en react native utilisant une API en node.js et connect\u00e9 \u00e0 une base de donn\u00e9es en SQL. Cette application mobile permet de g\u00e9rer facilement vos appareils \u00e0 l'aide thermostats Schluter Systems . Vous trouverez ici tout ce dont vous avez besoin pour configurer et personnaliser l'application selon vos besoins. Contributeur Steve Lepage Quentin Lecourt Lyes Hamrani","title":"Accueil"},{"location":"#bienvenue","text":"Bienvenue sur la documentation de notre projet ! Cette documentation a pour but de vous aider \u00e0 comprendre et utiliser notre produit efficacement.","title":"Bienvenue"},{"location":"#table-des-matieres","text":"Introduction Contributeurs","title":"Table des mati\u00e8res"},{"location":"#introduction","text":"Ce projet est une application mobile construit en react native utilisant une API en node.js et connect\u00e9 \u00e0 une base de donn\u00e9es en SQL. Cette application mobile permet de g\u00e9rer facilement vos appareils \u00e0 l'aide thermostats Schluter Systems . Vous trouverez ici tout ce dont vous avez besoin pour configurer et personnaliser l'application selon vos besoins.","title":"Introduction"},{"location":"#contributeur","text":"Steve Lepage Quentin Lecourt Lyes Hamrani","title":"Contributeur"},{"location":"JWT_guide/","text":"Guide sur les JSON Web Tokens (JWT) Ce guide explique en d\u00e9tail ce qu'est un JSON Web Token (JWT), comment il fonctionne et comment l'utiliser dans vos applications. Table des mati\u00e8res Introduction aux JWT Structure d'un JWT Utilisation des JWT S\u00e9curit\u00e9 des JWT Exemple pratique Signatures JWT et Leur Description Claims JWT et Leur Description Claims JWT Publics Claims JWT Priv\u00e9s Erreurs Courantes avec les JWT Meilleures Pratiques pour les JWT Informations qu\u2019on peut mettre dans un token Diff\u00e9rence entre Token d'authentification et Token d'autorisation Processus de Gestion des Permissions dans une Application React Native avec API Node.js Conclusion Sources Introduction aux JWT Contexte Historique : Les JSON Web Tokens (JWT) ont \u00e9t\u00e9 introduits en 2014 par le groupe de travail JWT au sein de l'IETF (Internet Engineering Task Force). JWT est une sp\u00e9cification qui est devenue un standard ouvert pour le transfert s\u00e9curis\u00e9 d'informations entre deux parties. Avec l'augmentation des API web et des applications distribu\u00e9es, JWT est devenu un choix populaire pour l'authentification et l'\u00e9change de donn\u00e9es, gr\u00e2ce \u00e0 sa simplicit\u00e9 et \u00e0 sa capacit\u00e9 \u00e0 transporter des informations de mani\u00e8re s\u00e9curis\u00e9e. Un JSON Web Token (JWT) est un format de jeton ouvert qui permet la transmission s\u00e9curis\u00e9e d'informations entre deux parties sous la forme d'un objet JSON. Ces informations sont sign\u00e9es num\u00e9riquement pour garantir l'authenticit\u00e9 et l'int\u00e9grit\u00e9 des donn\u00e9es. Cas d'Utilisation : Les JWT sont largement utilis\u00e9s dans divers sc\u00e9narios, notamment : Authentification d'API : Permet aux clients de se connecter \u00e0 un serveur et d'acc\u00e9der aux ressources prot\u00e9g\u00e9es sans avoir \u00e0 se r\u00e9authentifier \u00e0 chaque demande. Single Sign-On (SSO) : Facilite l'authentification unique entre plusieurs applications ou services. Stateless : Pas besoin de stocker les sessions sur le serveur. \u00c9change de Donn\u00e9es : Transfert s\u00e9curis\u00e9 de donn\u00e9es entre diff\u00e9rentes parties ou syst\u00e8mes. Structure d'un JWT Un JWT est compos\u00e9 de trois parties s\u00e9par\u00e9es par des points : Header : Contient le type (typ) de token (JWT) et l'algorithme de signature (alg). Payload : Contient les revendications (claims) document Json, c'est-\u00e0-dire les informations \u00e0 transmettre. C'est l'emplacement ou est pr\u00e9cis\u00e9 les dates de cr\u00e9ation et d'expiration du token. Exemple: (exp = expiration en timestamp \"exp\": 1647807974) Signature : V\u00e9rifie que le contenu n'a pas \u00e9t\u00e9 alt\u00e9r\u00e9. Sign\u00e9 avec un secret que seul le server conna\u00eet. D\u00e9codage d'un JWT : Pour d\u00e9coder un JWT, vous pouvez utiliser des outils en ligne comme D\u00e9cryptage et v\u00e9rification JWT via jwt.io qui permettent de visualiser les parties Header, Payload, et Signature du token. Vous pouvez \u00e9galement utiliser des biblioth\u00e8ques sp\u00e9cifiques dans divers langages de programmation pour d\u00e9coder et v\u00e9rifier les JWT. Utilisation des JWT Les JWT sont souvent utilis\u00e9s pour : - Authentification : Ils permettent \u00e0 un utilisateur de se connecter une fois et de continuer \u00e0 acc\u00e9der aux ressources sans avoir \u00e0 se reconnecter \u00e0 chaque requ\u00eate. - \u00c9change d'information s\u00e9curis\u00e9 : Le contenu d'un JWT peut \u00eatre sign\u00e9 et \u00e9ventuellement chiffr\u00e9. S\u00e9curit\u00e9 des JWT Bien que les JWT soient pratiques, il est essentiel de les utiliser correctement pour garantir la s\u00e9curit\u00e9 : Stockage S\u00e9curis\u00e9 des Cl\u00e9s : Utilisez des syst\u00e8mes de gestion des secrets ou des environnements s\u00e9curis\u00e9s pour stocker les cl\u00e9s secr\u00e8tes utilis\u00e9es pour signer les JWT. Rotation des Cl\u00e9s : Mettez en place une strat\u00e9gie de rotation r\u00e9guli\u00e8re des cl\u00e9s pour minimiser le risque d'exposition en cas de compromission. Expiration des Tokens : D\u00e9finissez une p\u00e9riode d'expiration appropri\u00e9e pour vos JWT afin de limiter la dur\u00e9e pendant laquelle un token peut \u00eatre utilis\u00e9 en cas de compromission. R\u00e9g\u00e9n\u00e9ration des Tokens : Utilisez des m\u00e9canismes pour renouveler les tokens expir\u00e9s, comme les tokens de rafra\u00eechissement, pour maintenir l'acc\u00e8s sans n\u00e9cessiter une nouvelle authentification compl\u00e8te. \u00c9vitez le Stockage Local : Ne stockez pas de JWT sensibles dans le stockage local du navigateur ; utilisez des cookies s\u00e9curis\u00e9s et HTTP-only si vous devez stocker des tokens. Utilisez HTTPS : Assurez-vous que toutes les communications impliquant des JWT sont prot\u00e9g\u00e9es par HTTPS pour \u00e9viter les attaques de type \"man-in-the-middle\". Invalider les Tokens : Assurez-vous d'avoir un m\u00e9canisme pour invalider les tokens si n\u00e9cessaire. Exemple pratique Voici comment g\u00e9n\u00e9rer un JWT en utilisant la biblioth\u00e8que jsonwebtoken en Node.js : const jwt = require('jsonwebtoken'); const token = jwt.sign({ userId: 123 }, 'secret_key', { expiresIn: '1h' }); console.log(token); Conclusion Les JWT sont un outil puissant pour l'authentification et l'\u00e9change s\u00e9curis\u00e9 de donn\u00e9es, mais ils doivent \u00eatre utilis\u00e9s avec prudence pour \u00e9viter des failles de s\u00e9curit\u00e9. Prenez soin de toujours prot\u00e9ger vos tokens et de suivre les meilleures pratiques en mati\u00e8re de s\u00e9curit\u00e9. JWT Security Best Practices - Auth0 Tableaux Signatures JWT et Leur Description Exemple de Signature JWT Description HS256 HMAC avec SHA-256, un algorithme de hachage sym\u00e9trique utilis\u00e9 pour la signature. RS256 RSA avec SHA-256, un algorithme de hachage asym\u00e9trique qui utilise une paire de cl\u00e9s publique et priv\u00e9e. ES256 ECDSA avec SHA-256, une signature num\u00e9rique bas\u00e9e sur la cryptographie elliptique. PS256 RSA-PSS avec SHA-256, une variante de RSA pour des signatures plus s\u00e9curis\u00e9es. EdDSA Utilise les courbes de Edwards pour des signatures rapides et s\u00e9curis\u00e9es, souvent Ed25519 . none Pas de signature, utilis\u00e9 pour les JWT non sign\u00e9s, g\u00e9n\u00e9ralement d\u00e9conseill\u00e9 pour la s\u00e9curit\u00e9. Claims JWT et Leur Description Claim JWT Description alg Algorithm : Sp\u00e9cifie l'algorithme de signature utilis\u00e9 pour le JWT (par exemple, HS256, RS256). cty Content Type : Indique le type de contenu du JWT, souvent utilis\u00e9 pour pr\u00e9ciser le type du payload. typ Type : Sp\u00e9cifie le type de jeton, par exemple \"JWT\" pour un JSON Web Token. kid Key ID : Identifiant de la cl\u00e9 utilis\u00e9e pour signer le jeton, utile pour g\u00e9rer plusieurs cl\u00e9s. iss Issuer : Identifie l'\u00e9metteur du jeton. sub Subject : Identifie le sujet du jeton, souvent l'utilisateur ou l'entit\u00e9 \u00e0 laquelle le jeton se r\u00e9f\u00e8re. exp Expires At : Sp\u00e9cifie la date et l'heure d'expiration du jeton, apr\u00e8s laquelle il ne sera plus valide. nbf Not Before : Sp\u00e9cifie la date et l'heure avant laquelle le jeton ne devrait pas \u00eatre accept\u00e9. iat Issued At : Sp\u00e9cifie la date et l'heure \u00e0 laquelle le jeton a \u00e9t\u00e9 \u00e9mis. jti JWT ID : Identifiant unique pour le jeton, souvent utilis\u00e9 pour \u00e9viter les rejets de jetons. aud Audience : Sp\u00e9cifie le ou les destinataires pour lesquels le jeton est destin\u00e9. Claims JWT Publics Claim JWT Description email Adresse e-mail de l'utilisateur. username Nom d'utilisateur. role R\u00f4le ou privil\u00e8ges de l'utilisateur (par exemple, \"admin\", \"user\"). name Nom complet de l'utilisateur. scope Port\u00e9e ou les permissions accord\u00e9es par le jeton. Claims JWT Priv\u00e9s Claim JWT Description user_id Identifiant unique de l'utilisateur dans votre base de donn\u00e9es. department D\u00e9partement ou section de l'organisation \u00e0 laquelle l'utilisateur appartient. custom_claim Toute autre donn\u00e9e personnalis\u00e9e ajout\u00e9e au jeton en fonction des besoins sp\u00e9cifiques de l'application. Erreurs Courantes avec les JWT Erreur Description Invalid Token Le jeton est invalide ou malform\u00e9. Token Expired Le jeton a expir\u00e9 et n'est plus valide. Token Not Yet Valid Le jeton est utilis\u00e9 avant sa date de validit\u00e9. Signature Verification Failed La signature du jeton ne correspond pas, indiquant une possible falsification ou une cl\u00e9 incorrecte. Missing Claim Un claim requis est absent dans le jeton. Meilleures Pratiques pour les JWT Pratique Description Utiliser HTTPS Toujours utiliser HTTPS pour transmettre les JWT afin de prot\u00e9ger les donn\u00e9es en transit. Expiration D\u00e9finir une date d'expiration appropri\u00e9e pour les jetons afin de limiter leur dur\u00e9e de validit\u00e9. Rotation des Cl\u00e9s R\u00e9guli\u00e8rement faire tourner les cl\u00e9s de signature pour am\u00e9liorer la s\u00e9curit\u00e9. Validation des Claims Toujours valider les claims du JWT (comme exp , nbf , aud ) pour s'assurer de leur l\u00e9gitimit\u00e9. Utiliser des Algorithmes S\u00e9curis\u00e9s Choisir des algorithmes de signature s\u00e9curis\u00e9s comme RS256 ou ES256 au lieu de none . Informations qu\u2019on peut mettre dans un token Un JWT (JSON Web Token) peut contenir plusieurs informations dans ses claims : Registered claims : iss (issuer) : l'\u00e9metteur du token. sub (subject) : l'identit\u00e9 du sujet (g\u00e9n\u00e9ralement un utilisateur). exp (expiration) : la date d'expiration du token. iat (issued at) : la date de cr\u00e9ation du token. Public claims : des informations personnalis\u00e9es comme le nom d'utilisateur, le r\u00f4le, l'e-mail. Private claims : des donn\u00e9es d\u00e9finies par l'\u00e9metteur et le r\u00e9cepteur pour des besoins sp\u00e9cifiques. Difference entre Token d authentification et Token d autorisation Token d'authentification : Utilis\u00e9 pour v\u00e9rifier l'identit\u00e9 de l'utilisateur. Fournit un acc\u00e8s \u00e0 l'application apr\u00e8s une connexion r\u00e9ussie. Exemple : Un token pour confirmer que l'utilisateur est bien celui qu'il pr\u00e9tend \u00eatre. Token d'autorisation : Utilis\u00e9 pour accorder ou limiter l'acc\u00e8s \u00e0 certaines ressources ou actions sp\u00e9cifiques. G\u00e8re les permissions (ce que l'utilisateur peut ou ne peut pas faire). Exemple : Un token indiquant si l'utilisateur peut acc\u00e9der \u00e0 une API particuli\u00e8re. Processus de Gestion des Permissions dans une Application React Native avec API Node.js La gestion des permissions dans une application React Native utilisant une API Node.js et une base de donn\u00e9es SQL suit g\u00e9n\u00e9ralement ces \u00e9tapes : 1. Authentification utilisateur Connexion : L'utilisateur se connecte via l'application React Native (par exemple, avec un formulaire). V\u00e9rification : L'API Node.js v\u00e9rifie les informations d'identification dans la base de donn\u00e9es SQL et g\u00e9n\u00e8re un token JWT. 2. Envoi du token Renvoi du token : Apr\u00e8s une connexion r\u00e9ussie, le token JWT est renvoy\u00e9 au client (React Native) et stock\u00e9 en local (local storage ou secure storage). 3. Requ\u00eates avec autorisation Envoi du token : Pour chaque requ\u00eate n\u00e9cessitant une permission, le client envoie le token JWT dans les headers de la requ\u00eate (g\u00e9n\u00e9ralement dans le header Authorization ). 4. V\u00e9rification des permissions Validation du token : L'API Node.js v\u00e9rifie le token JWT pour confirmer l'identit\u00e9 de l'utilisateur et r\u00e9cup\u00e9rer les permissions associ\u00e9es. Permissions en base : Les permissions peuvent \u00eatre stock\u00e9es dans la base de donn\u00e9es SQL (par exemple, les r\u00f4les ou droits de l'utilisateur). 5. Autorisation Comparaison des permissions : L'API Node.js compare les permissions de l'utilisateur avec l'action demand\u00e9e. Si l'utilisateur est autoris\u00e9, la requ\u00eate est trait\u00e9e ; sinon, une erreur est renvoy\u00e9e (403 Forbidden). Exemple : Un utilisateur avec un r\u00f4le \"admin\" peut acc\u00e9der \u00e0 des routes sp\u00e9cifiques de l'API (comme la gestion d'utilisateurs), tandis qu'un utilisateur avec un r\u00f4le \"user\" n'a acc\u00e8s qu'\u00e0 des fonctionnalit\u00e9s basiques. Sources https://www.youtube.com/watch?v=5qNfPBcogCs https://www.atatus.com/blog/jwt-authentication-when-and-how-to-use-it/ https://medium.com/@adesinabolaji/fundamentals-of-jwt-json-web-token-bafb2cfbd159 https://jwt.io/introduction https://redis.io/blog/json-web-tokens-jwt-are-dangerous-for-user-sessions/","title":"Json Web Token"},{"location":"JWT_guide/#guide-sur-les-json-web-tokens-jwt","text":"Ce guide explique en d\u00e9tail ce qu'est un JSON Web Token (JWT), comment il fonctionne et comment l'utiliser dans vos applications.","title":"Guide sur les JSON Web Tokens (JWT)"},{"location":"JWT_guide/#table-des-matieres","text":"Introduction aux JWT Structure d'un JWT Utilisation des JWT S\u00e9curit\u00e9 des JWT Exemple pratique Signatures JWT et Leur Description Claims JWT et Leur Description Claims JWT Publics Claims JWT Priv\u00e9s Erreurs Courantes avec les JWT Meilleures Pratiques pour les JWT Informations qu\u2019on peut mettre dans un token Diff\u00e9rence entre Token d'authentification et Token d'autorisation Processus de Gestion des Permissions dans une Application React Native avec API Node.js Conclusion Sources","title":"Table des mati\u00e8res"},{"location":"JWT_guide/#introduction-aux-jwt","text":"Contexte Historique : Les JSON Web Tokens (JWT) ont \u00e9t\u00e9 introduits en 2014 par le groupe de travail JWT au sein de l'IETF (Internet Engineering Task Force). JWT est une sp\u00e9cification qui est devenue un standard ouvert pour le transfert s\u00e9curis\u00e9 d'informations entre deux parties. Avec l'augmentation des API web et des applications distribu\u00e9es, JWT est devenu un choix populaire pour l'authentification et l'\u00e9change de donn\u00e9es, gr\u00e2ce \u00e0 sa simplicit\u00e9 et \u00e0 sa capacit\u00e9 \u00e0 transporter des informations de mani\u00e8re s\u00e9curis\u00e9e. Un JSON Web Token (JWT) est un format de jeton ouvert qui permet la transmission s\u00e9curis\u00e9e d'informations entre deux parties sous la forme d'un objet JSON. Ces informations sont sign\u00e9es num\u00e9riquement pour garantir l'authenticit\u00e9 et l'int\u00e9grit\u00e9 des donn\u00e9es. Cas d'Utilisation : Les JWT sont largement utilis\u00e9s dans divers sc\u00e9narios, notamment : Authentification d'API : Permet aux clients de se connecter \u00e0 un serveur et d'acc\u00e9der aux ressources prot\u00e9g\u00e9es sans avoir \u00e0 se r\u00e9authentifier \u00e0 chaque demande. Single Sign-On (SSO) : Facilite l'authentification unique entre plusieurs applications ou services. Stateless : Pas besoin de stocker les sessions sur le serveur. \u00c9change de Donn\u00e9es : Transfert s\u00e9curis\u00e9 de donn\u00e9es entre diff\u00e9rentes parties ou syst\u00e8mes.","title":"Introduction aux JWT"},{"location":"JWT_guide/#structure-dun-jwt","text":"Un JWT est compos\u00e9 de trois parties s\u00e9par\u00e9es par des points : Header : Contient le type (typ) de token (JWT) et l'algorithme de signature (alg). Payload : Contient les revendications (claims) document Json, c'est-\u00e0-dire les informations \u00e0 transmettre. C'est l'emplacement ou est pr\u00e9cis\u00e9 les dates de cr\u00e9ation et d'expiration du token. Exemple: (exp = expiration en timestamp \"exp\": 1647807974) Signature : V\u00e9rifie que le contenu n'a pas \u00e9t\u00e9 alt\u00e9r\u00e9. Sign\u00e9 avec un secret que seul le server conna\u00eet. D\u00e9codage d'un JWT : Pour d\u00e9coder un JWT, vous pouvez utiliser des outils en ligne comme D\u00e9cryptage et v\u00e9rification JWT via jwt.io qui permettent de visualiser les parties Header, Payload, et Signature du token. Vous pouvez \u00e9galement utiliser des biblioth\u00e8ques sp\u00e9cifiques dans divers langages de programmation pour d\u00e9coder et v\u00e9rifier les JWT.","title":"Structure d'un JWT"},{"location":"JWT_guide/#utilisation-des-jwt","text":"Les JWT sont souvent utilis\u00e9s pour : - Authentification : Ils permettent \u00e0 un utilisateur de se connecter une fois et de continuer \u00e0 acc\u00e9der aux ressources sans avoir \u00e0 se reconnecter \u00e0 chaque requ\u00eate. - \u00c9change d'information s\u00e9curis\u00e9 : Le contenu d'un JWT peut \u00eatre sign\u00e9 et \u00e9ventuellement chiffr\u00e9.","title":"Utilisation des JWT"},{"location":"JWT_guide/#securite-des-jwt","text":"Bien que les JWT soient pratiques, il est essentiel de les utiliser correctement pour garantir la s\u00e9curit\u00e9 : Stockage S\u00e9curis\u00e9 des Cl\u00e9s : Utilisez des syst\u00e8mes de gestion des secrets ou des environnements s\u00e9curis\u00e9s pour stocker les cl\u00e9s secr\u00e8tes utilis\u00e9es pour signer les JWT. Rotation des Cl\u00e9s : Mettez en place une strat\u00e9gie de rotation r\u00e9guli\u00e8re des cl\u00e9s pour minimiser le risque d'exposition en cas de compromission. Expiration des Tokens : D\u00e9finissez une p\u00e9riode d'expiration appropri\u00e9e pour vos JWT afin de limiter la dur\u00e9e pendant laquelle un token peut \u00eatre utilis\u00e9 en cas de compromission. R\u00e9g\u00e9n\u00e9ration des Tokens : Utilisez des m\u00e9canismes pour renouveler les tokens expir\u00e9s, comme les tokens de rafra\u00eechissement, pour maintenir l'acc\u00e8s sans n\u00e9cessiter une nouvelle authentification compl\u00e8te. \u00c9vitez le Stockage Local : Ne stockez pas de JWT sensibles dans le stockage local du navigateur ; utilisez des cookies s\u00e9curis\u00e9s et HTTP-only si vous devez stocker des tokens. Utilisez HTTPS : Assurez-vous que toutes les communications impliquant des JWT sont prot\u00e9g\u00e9es par HTTPS pour \u00e9viter les attaques de type \"man-in-the-middle\". Invalider les Tokens : Assurez-vous d'avoir un m\u00e9canisme pour invalider les tokens si n\u00e9cessaire.","title":"S\u00e9curit\u00e9 des JWT"},{"location":"JWT_guide/#exemple-pratique","text":"Voici comment g\u00e9n\u00e9rer un JWT en utilisant la biblioth\u00e8que jsonwebtoken en Node.js : const jwt = require('jsonwebtoken'); const token = jwt.sign({ userId: 123 }, 'secret_key', { expiresIn: '1h' }); console.log(token);","title":"Exemple pratique"},{"location":"JWT_guide/#conclusion","text":"Les JWT sont un outil puissant pour l'authentification et l'\u00e9change s\u00e9curis\u00e9 de donn\u00e9es, mais ils doivent \u00eatre utilis\u00e9s avec prudence pour \u00e9viter des failles de s\u00e9curit\u00e9. Prenez soin de toujours prot\u00e9ger vos tokens et de suivre les meilleures pratiques en mati\u00e8re de s\u00e9curit\u00e9. JWT Security Best Practices - Auth0","title":"Conclusion"},{"location":"JWT_guide/#tableaux","text":"","title":"Tableaux"},{"location":"JWT_guide/#signatures-jwt-et-leur-description","text":"Exemple de Signature JWT Description HS256 HMAC avec SHA-256, un algorithme de hachage sym\u00e9trique utilis\u00e9 pour la signature. RS256 RSA avec SHA-256, un algorithme de hachage asym\u00e9trique qui utilise une paire de cl\u00e9s publique et priv\u00e9e. ES256 ECDSA avec SHA-256, une signature num\u00e9rique bas\u00e9e sur la cryptographie elliptique. PS256 RSA-PSS avec SHA-256, une variante de RSA pour des signatures plus s\u00e9curis\u00e9es. EdDSA Utilise les courbes de Edwards pour des signatures rapides et s\u00e9curis\u00e9es, souvent Ed25519 . none Pas de signature, utilis\u00e9 pour les JWT non sign\u00e9s, g\u00e9n\u00e9ralement d\u00e9conseill\u00e9 pour la s\u00e9curit\u00e9.","title":"Signatures JWT et Leur Description"},{"location":"JWT_guide/#claims-jwt-et-leur-description","text":"Claim JWT Description alg Algorithm : Sp\u00e9cifie l'algorithme de signature utilis\u00e9 pour le JWT (par exemple, HS256, RS256). cty Content Type : Indique le type de contenu du JWT, souvent utilis\u00e9 pour pr\u00e9ciser le type du payload. typ Type : Sp\u00e9cifie le type de jeton, par exemple \"JWT\" pour un JSON Web Token. kid Key ID : Identifiant de la cl\u00e9 utilis\u00e9e pour signer le jeton, utile pour g\u00e9rer plusieurs cl\u00e9s. iss Issuer : Identifie l'\u00e9metteur du jeton. sub Subject : Identifie le sujet du jeton, souvent l'utilisateur ou l'entit\u00e9 \u00e0 laquelle le jeton se r\u00e9f\u00e8re. exp Expires At : Sp\u00e9cifie la date et l'heure d'expiration du jeton, apr\u00e8s laquelle il ne sera plus valide. nbf Not Before : Sp\u00e9cifie la date et l'heure avant laquelle le jeton ne devrait pas \u00eatre accept\u00e9. iat Issued At : Sp\u00e9cifie la date et l'heure \u00e0 laquelle le jeton a \u00e9t\u00e9 \u00e9mis. jti JWT ID : Identifiant unique pour le jeton, souvent utilis\u00e9 pour \u00e9viter les rejets de jetons. aud Audience : Sp\u00e9cifie le ou les destinataires pour lesquels le jeton est destin\u00e9.","title":"Claims JWT et Leur Description"},{"location":"JWT_guide/#claims-jwt-publics","text":"Claim JWT Description email Adresse e-mail de l'utilisateur. username Nom d'utilisateur. role R\u00f4le ou privil\u00e8ges de l'utilisateur (par exemple, \"admin\", \"user\"). name Nom complet de l'utilisateur. scope Port\u00e9e ou les permissions accord\u00e9es par le jeton.","title":"Claims JWT Publics"},{"location":"JWT_guide/#claims-jwt-prives","text":"Claim JWT Description user_id Identifiant unique de l'utilisateur dans votre base de donn\u00e9es. department D\u00e9partement ou section de l'organisation \u00e0 laquelle l'utilisateur appartient. custom_claim Toute autre donn\u00e9e personnalis\u00e9e ajout\u00e9e au jeton en fonction des besoins sp\u00e9cifiques de l'application.","title":"Claims JWT Priv\u00e9s"},{"location":"JWT_guide/#erreurs-courantes-avec-les-jwt","text":"Erreur Description Invalid Token Le jeton est invalide ou malform\u00e9. Token Expired Le jeton a expir\u00e9 et n'est plus valide. Token Not Yet Valid Le jeton est utilis\u00e9 avant sa date de validit\u00e9. Signature Verification Failed La signature du jeton ne correspond pas, indiquant une possible falsification ou une cl\u00e9 incorrecte. Missing Claim Un claim requis est absent dans le jeton.","title":"Erreurs Courantes avec les JWT"},{"location":"JWT_guide/#meilleures-pratiques-pour-les-jwt","text":"Pratique Description Utiliser HTTPS Toujours utiliser HTTPS pour transmettre les JWT afin de prot\u00e9ger les donn\u00e9es en transit. Expiration D\u00e9finir une date d'expiration appropri\u00e9e pour les jetons afin de limiter leur dur\u00e9e de validit\u00e9. Rotation des Cl\u00e9s R\u00e9guli\u00e8rement faire tourner les cl\u00e9s de signature pour am\u00e9liorer la s\u00e9curit\u00e9. Validation des Claims Toujours valider les claims du JWT (comme exp , nbf , aud ) pour s'assurer de leur l\u00e9gitimit\u00e9. Utiliser des Algorithmes S\u00e9curis\u00e9s Choisir des algorithmes de signature s\u00e9curis\u00e9s comme RS256 ou ES256 au lieu de none .","title":"Meilleures Pratiques pour les JWT"},{"location":"JWT_guide/#informations-quon-peut-mettre-dans-un-token","text":"Un JWT (JSON Web Token) peut contenir plusieurs informations dans ses claims : Registered claims : iss (issuer) : l'\u00e9metteur du token. sub (subject) : l'identit\u00e9 du sujet (g\u00e9n\u00e9ralement un utilisateur). exp (expiration) : la date d'expiration du token. iat (issued at) : la date de cr\u00e9ation du token. Public claims : des informations personnalis\u00e9es comme le nom d'utilisateur, le r\u00f4le, l'e-mail. Private claims : des donn\u00e9es d\u00e9finies par l'\u00e9metteur et le r\u00e9cepteur pour des besoins sp\u00e9cifiques.","title":"Informations qu\u2019on peut mettre dans un token"},{"location":"JWT_guide/#difference-entre-token-d-authentification-et-token-d-autorisation","text":"Token d'authentification : Utilis\u00e9 pour v\u00e9rifier l'identit\u00e9 de l'utilisateur. Fournit un acc\u00e8s \u00e0 l'application apr\u00e8s une connexion r\u00e9ussie. Exemple : Un token pour confirmer que l'utilisateur est bien celui qu'il pr\u00e9tend \u00eatre. Token d'autorisation : Utilis\u00e9 pour accorder ou limiter l'acc\u00e8s \u00e0 certaines ressources ou actions sp\u00e9cifiques. G\u00e8re les permissions (ce que l'utilisateur peut ou ne peut pas faire). Exemple : Un token indiquant si l'utilisateur peut acc\u00e9der \u00e0 une API particuli\u00e8re.","title":"Difference entre Token d authentification et Token d autorisation"},{"location":"JWT_guide/#processus-de-gestion-des-permissions-dans-une-application-react-native-avec-api-nodejs","text":"La gestion des permissions dans une application React Native utilisant une API Node.js et une base de donn\u00e9es SQL suit g\u00e9n\u00e9ralement ces \u00e9tapes :","title":"Processus de Gestion des Permissions dans une Application React Native avec API Node.js"},{"location":"JWT_guide/#1-authentification-utilisateur","text":"Connexion : L'utilisateur se connecte via l'application React Native (par exemple, avec un formulaire). V\u00e9rification : L'API Node.js v\u00e9rifie les informations d'identification dans la base de donn\u00e9es SQL et g\u00e9n\u00e8re un token JWT.","title":"1. Authentification utilisateur"},{"location":"JWT_guide/#2-envoi-du-token","text":"Renvoi du token : Apr\u00e8s une connexion r\u00e9ussie, le token JWT est renvoy\u00e9 au client (React Native) et stock\u00e9 en local (local storage ou secure storage).","title":"2. Envoi du token"},{"location":"JWT_guide/#3-requetes-avec-autorisation","text":"Envoi du token : Pour chaque requ\u00eate n\u00e9cessitant une permission, le client envoie le token JWT dans les headers de la requ\u00eate (g\u00e9n\u00e9ralement dans le header Authorization ).","title":"3. Requ\u00eates avec autorisation"},{"location":"JWT_guide/#4-verification-des-permissions","text":"Validation du token : L'API Node.js v\u00e9rifie le token JWT pour confirmer l'identit\u00e9 de l'utilisateur et r\u00e9cup\u00e9rer les permissions associ\u00e9es. Permissions en base : Les permissions peuvent \u00eatre stock\u00e9es dans la base de donn\u00e9es SQL (par exemple, les r\u00f4les ou droits de l'utilisateur).","title":"4. V\u00e9rification des permissions"},{"location":"JWT_guide/#5-autorisation","text":"Comparaison des permissions : L'API Node.js compare les permissions de l'utilisateur avec l'action demand\u00e9e. Si l'utilisateur est autoris\u00e9, la requ\u00eate est trait\u00e9e ; sinon, une erreur est renvoy\u00e9e (403 Forbidden). Exemple : Un utilisateur avec un r\u00f4le \"admin\" peut acc\u00e9der \u00e0 des routes sp\u00e9cifiques de l'API (comme la gestion d'utilisateurs), tandis qu'un utilisateur avec un r\u00f4le \"user\" n'a acc\u00e8s qu'\u00e0 des fonctionnalit\u00e9s basiques.","title":"5. Autorisation"},{"location":"JWT_guide/#sources","text":"https://www.youtube.com/watch?v=5qNfPBcogCs https://www.atatus.com/blog/jwt-authentication-when-and-how-to-use-it/ https://medium.com/@adesinabolaji/fundamentals-of-jwt-json-web-token-bafb2cfbd159 https://jwt.io/introduction https://redis.io/blog/json-web-tokens-jwt-are-dangerous-for-user-sessions/","title":"Sources"},{"location":"README_/","text":"GestionPlancherMobile Ce document d\u00e9crit les \u00e9tapes de la cr\u00e9ation d'une application mobile React Native, ainsi que la configuration de son environnement. Table des mati\u00e8res GestionPlancherMobile Commandes et Description pour D\u00e9marrer un Projet React Native Cr\u00e9ation d'un Nouveau Projet Installation de Packages pour la Navigation et l'Am\u00e9lioration des Performances Recommandations d'Extensions pour Visual Studio Code Gestion de l'Authentification Sources de tutoriels: D\u00e9marrer un Projet React Native Autres Sources: D\u00e9marrer un Projet React Native Commandes et Description pour D\u00e9marrer un Projet React Native Commande Description npx create-expo-app gestion-plancher-mobile -t Cr\u00e9e un nouveau projet Expo avec un template TypeScript. npx expo start D\u00e9marre le serveur de d\u00e9veloppement Expo. npx expo install expo-router react-native-safe-area-context react-native-screens expo-linking expo-constants expo-status-bar Installe les d\u00e9pendances n\u00e9cessaires pour le projet Expo. npm install react-native-vector-icons --save Installe les ic\u00f4nes vectorielles pour React Native. npm install -g react-devtools Installe React DevTools globalement pour le d\u00e9bogage des applications React. npm run android Compile et lance l'application sur un \u00e9mulateur Android ou un appareil connect\u00e9. npm install --save-dev typescript@~5.3.3 Installe une version sp\u00e9cifique de TypeScript compatible avec Expo. Cr\u00e9ation d'un Nouveau Projet Si vous avez d\u00e9j\u00e0 cr\u00e9\u00e9 votre dossier pour le nouveau projet ou cloner un fichier de d\u00e9part commencer \u00e0 l'\u00e9tape #6 Cr\u00e9er un nouveau projet avec Git : Documentation officielle de Git pour la cr\u00e9ation d'un d\u00e9p\u00f4t local Cloner un d\u00e9p\u00f4t existant avec Git : Documentation officielle de Git pour cloner un d\u00e9p\u00f4t Cr\u00e9er un nouveau projet avec Expo. Possible que cette \u00e9tape soit demand\u00e9e pour utiliser expo-app. expo-app fait partie de l'\u00e9cosyst\u00e8me Expo, qui est un ensemble d'outils et de services destin\u00e9s \u00e0 simplifier le d\u00e9veloppement d'applications mobiles en utilisant React Native. Utiliser la commande : bash npx create-expo-app gestion-plancher-mobile -t Choisir blank (TypeScript) comme template. Installer Expo si demand\u00e9. Documentation Expo Start a new React Native project with Expo Installer Android Studio pour \u00e9muler un appareil Android (optionnel). Lien vers Android Studio Installer React DevTools. Utiliser la commande : bash npm install -g react-devtools Si vous rencontrez des erreurs PowerShell, r\u00e9f\u00e9rez-vous \u00e0 la documentation Microsoft Lancer l'application sur Android. Utiliser la commande : bash npm run android Configurer TypeScript pour la compatibilit\u00e9 avec Expo. Si vous avez ce message c'Est que votre version de TypeScript n'est pas compatible avec la version de Expo: The following packages should be updated for best compatibility with the installed expo version: typescript@5.5.4 - expected version: ~5.3.3 Your project may not work correctly until you install the expected versions of the packages. Il est recommand\u00e9 d'intaller la version de TypeScript 5.3.3 qui est compatible avec Expo \u00e0 l'aide de cette commande: - Utiliser la commande : bash npm install --save-dev typescript@~5.3.3 - V\u00e9rifier la version avec : bash npx tsc --version Red\u00e9marrer le Metro Bundler et React DevTools. Relancer l'application : bash npm run android Si vous \u00eates sur l'\u00e9mulateur android possible de faire CTRL + M permet de voir plusieurs options (inspecteur d'\u00e9l\u00e9ments) Lancer React DevTools : React-DevTools permet d'inspecter et de d\u00e9boguer la structure des composants React dans une application en temps r\u00e9el. bash react-devtools Si vous avez ce message react-devtools : Impossible de charger le fichier C:\\Users\\X\\AppData\\Roaming\\npm\\react-devtools.ps1. Le fichier (nom du fichier) n\u2019est pas sign\u00e9 num\u00e9riquement. Explication de l'erreur: PowerShell a une strat\u00e9gie d'ex\u00e9cution qui contr\u00f4le les types de scripts qui peuvent \u00eatre ex\u00e9cut\u00e9s. Par d\u00e9faut, sur certaines machines, cette strat\u00e9gie peut \u00eatre d\u00e9finie sur Restricted ou RemoteSigned, ce qui emp\u00eache l'ex\u00e9cution de scripts non sign\u00e9s, comme celui de react-devtools. Documentation Microsoft: https://learn.microsoft.com/fr-fr/powershell/module/microsoft.powershell.core/about/about_execution_policies?view=powershell-7.4 <u>Solution:</u> 11.1 Lancer Windows PowerShell en tant qu'Administrateur. 11.2 V\u00e9rifiez la strat\u00e9gie actuelle : Tapez la commande suivante pour v\u00e9rifier la strat\u00e9gie d'ex\u00e9cution actuelle : Get-ExecutionPolicy 11.3 Changez la strat\u00e9gie d'ex\u00e9cution : Pour permettre l'ex\u00e9cution de scripts non sign\u00e9s (ce qui est g\u00e9n\u00e9ralement s\u00fbr pour les scripts locaux), tapez la commande suivante : ```bash Set-ExecutionPolicy RemoteSigned ``` 11.4 Relancer l'application React-DevTools via la commande: ```bash react-devtools ``` Installation de Packages pour la Navigation et l'Am\u00e9lioration des Performances Navigation de base : bash npm install @react-navigation/native @react-navigation/native-stack Am\u00e9liorations des Performances : \u00c9tape 1 : Installation des packages pour les performances Ouvrez votre terminal. Assurez-vous d'\u00eatre dans le r\u00e9pertoire de votre projet. Ex\u00e9cutez la commande suivante pour installer les packages n\u00e9cessaires : bash npm install react-native-screens react-native-safe-area-context Recommandations d'Extensions pour Visual Studio Code ES7+ React/Redux/React-Native snippets Installation de l'extension : Ouvrez Visual Studio Code. Acc\u00e9dez \u00e0 la section des extensions (vous pouvez utiliser le raccourci Ctrl+Shift+X sur Windows ou Cmd+Shift+X sur macOS). Recherchez l'extension ES7+ React/Redux/React-Native snippets . Cliquez sur \"Install\" pour ajouter l'extension \u00e0 votre \u00e9diteur. Description : Cette extension permet de g\u00e9n\u00e9rer rapidement du code standard pour React, React Native, Redux, et JavaScript moderne. Exemple d'utilisation : Une fois l'extension install\u00e9e, tapez rnfe et appuyez sur Tab pour g\u00e9n\u00e9rer automatiquement un composant fonctionnel de base en React Native. Voici un exemple de code g\u00e9n\u00e9r\u00e9 : ```javascript import React from 'react'; import { View, Text } from 'react-native'; const MyComponent = () => { return ( MyComponent ); }; export default MyComponent; ``` Gestion de l'Authentification Sources de tutoriels d\u00e9marrer un Projet React Native Introduction \u00e0 la cr\u00e9ation d'une application mobile avec React Native et Visual Studio Code Cr\u00e9er une App Mobile avec REACT NATIVE pour D\u00e9butant | Tutoriel React Native Autres Sources d\u00e9marrer un Projet React Native Documentation de React Native Expo guides \u25ba npx create-expo-app@latest \u25ba npx expo start \u25ba npx expo install expo-router react-native-safe-area-context react-native-screens expo-linking expo-constants expo-status-bar \u25ba npm install react-native-vector-icons --save Installer les d\u00e9pendances avec Expo Design avec React Native Elements Cr\u00e9er des composants avec Tailwind CSS - Tailwind CSS Documentation Markdown Guide","title":"Introduction \u27a0 ReadMe"},{"location":"README_/#gestionplanchermobile","text":"Ce document d\u00e9crit les \u00e9tapes de la cr\u00e9ation d'une application mobile React Native, ainsi que la configuration de son environnement.","title":"GestionPlancherMobile"},{"location":"README_/#table-des-matieres","text":"GestionPlancherMobile Commandes et Description pour D\u00e9marrer un Projet React Native Cr\u00e9ation d'un Nouveau Projet Installation de Packages pour la Navigation et l'Am\u00e9lioration des Performances Recommandations d'Extensions pour Visual Studio Code Gestion de l'Authentification Sources de tutoriels: D\u00e9marrer un Projet React Native Autres Sources: D\u00e9marrer un Projet React Native","title":"Table des mati\u00e8res"},{"location":"README_/#commandes-et-description-pour-demarrer-un-projet-react-native","text":"Commande Description npx create-expo-app gestion-plancher-mobile -t Cr\u00e9e un nouveau projet Expo avec un template TypeScript. npx expo start D\u00e9marre le serveur de d\u00e9veloppement Expo. npx expo install expo-router react-native-safe-area-context react-native-screens expo-linking expo-constants expo-status-bar Installe les d\u00e9pendances n\u00e9cessaires pour le projet Expo. npm install react-native-vector-icons --save Installe les ic\u00f4nes vectorielles pour React Native. npm install -g react-devtools Installe React DevTools globalement pour le d\u00e9bogage des applications React. npm run android Compile et lance l'application sur un \u00e9mulateur Android ou un appareil connect\u00e9. npm install --save-dev typescript@~5.3.3 Installe une version sp\u00e9cifique de TypeScript compatible avec Expo.","title":"Commandes et Description pour D\u00e9marrer un Projet React Native"},{"location":"README_/#creation-dun-nouveau-projet","text":"Si vous avez d\u00e9j\u00e0 cr\u00e9\u00e9 votre dossier pour le nouveau projet ou cloner un fichier de d\u00e9part commencer \u00e0 l'\u00e9tape #6 Cr\u00e9er un nouveau projet avec Git : Documentation officielle de Git pour la cr\u00e9ation d'un d\u00e9p\u00f4t local Cloner un d\u00e9p\u00f4t existant avec Git : Documentation officielle de Git pour cloner un d\u00e9p\u00f4t Cr\u00e9er un nouveau projet avec Expo. Possible que cette \u00e9tape soit demand\u00e9e pour utiliser expo-app. expo-app fait partie de l'\u00e9cosyst\u00e8me Expo, qui est un ensemble d'outils et de services destin\u00e9s \u00e0 simplifier le d\u00e9veloppement d'applications mobiles en utilisant React Native. Utiliser la commande : bash npx create-expo-app gestion-plancher-mobile -t Choisir blank (TypeScript) comme template. Installer Expo si demand\u00e9. Documentation Expo Start a new React Native project with Expo Installer Android Studio pour \u00e9muler un appareil Android (optionnel). Lien vers Android Studio Installer React DevTools. Utiliser la commande : bash npm install -g react-devtools Si vous rencontrez des erreurs PowerShell, r\u00e9f\u00e9rez-vous \u00e0 la documentation Microsoft Lancer l'application sur Android. Utiliser la commande : bash npm run android Configurer TypeScript pour la compatibilit\u00e9 avec Expo. Si vous avez ce message c'Est que votre version de TypeScript n'est pas compatible avec la version de Expo: The following packages should be updated for best compatibility with the installed expo version: typescript@5.5.4 - expected version: ~5.3.3 Your project may not work correctly until you install the expected versions of the packages. Il est recommand\u00e9 d'intaller la version de TypeScript 5.3.3 qui est compatible avec Expo \u00e0 l'aide de cette commande: - Utiliser la commande : bash npm install --save-dev typescript@~5.3.3 - V\u00e9rifier la version avec : bash npx tsc --version Red\u00e9marrer le Metro Bundler et React DevTools. Relancer l'application : bash npm run android Si vous \u00eates sur l'\u00e9mulateur android possible de faire CTRL + M permet de voir plusieurs options (inspecteur d'\u00e9l\u00e9ments) Lancer React DevTools : React-DevTools permet d'inspecter et de d\u00e9boguer la structure des composants React dans une application en temps r\u00e9el. bash react-devtools Si vous avez ce message react-devtools : Impossible de charger le fichier C:\\Users\\X\\AppData\\Roaming\\npm\\react-devtools.ps1. Le fichier (nom du fichier) n\u2019est pas sign\u00e9 num\u00e9riquement. Explication de l'erreur: PowerShell a une strat\u00e9gie d'ex\u00e9cution qui contr\u00f4le les types de scripts qui peuvent \u00eatre ex\u00e9cut\u00e9s. Par d\u00e9faut, sur certaines machines, cette strat\u00e9gie peut \u00eatre d\u00e9finie sur Restricted ou RemoteSigned, ce qui emp\u00eache l'ex\u00e9cution de scripts non sign\u00e9s, comme celui de react-devtools. Documentation Microsoft: https://learn.microsoft.com/fr-fr/powershell/module/microsoft.powershell.core/about/about_execution_policies?view=powershell-7.4 <u>Solution:</u> 11.1 Lancer Windows PowerShell en tant qu'Administrateur. 11.2 V\u00e9rifiez la strat\u00e9gie actuelle : Tapez la commande suivante pour v\u00e9rifier la strat\u00e9gie d'ex\u00e9cution actuelle : Get-ExecutionPolicy 11.3 Changez la strat\u00e9gie d'ex\u00e9cution : Pour permettre l'ex\u00e9cution de scripts non sign\u00e9s (ce qui est g\u00e9n\u00e9ralement s\u00fbr pour les scripts locaux), tapez la commande suivante : ```bash Set-ExecutionPolicy RemoteSigned ``` 11.4 Relancer l'application React-DevTools via la commande: ```bash react-devtools ```","title":"Cr\u00e9ation d'un Nouveau Projet"},{"location":"README_/#installation-de-packages-pour-la-navigation-et-lamelioration-des-performances","text":"Navigation de base : bash npm install @react-navigation/native @react-navigation/native-stack","title":"Installation de Packages pour la Navigation et l'Am\u00e9lioration des Performances"},{"location":"README_/#ameliorations-des-performances","text":"","title":"Am\u00e9liorations des Performances :"},{"location":"README_/#etape-1-installation-des-packages-pour-les-performances","text":"Ouvrez votre terminal. Assurez-vous d'\u00eatre dans le r\u00e9pertoire de votre projet. Ex\u00e9cutez la commande suivante pour installer les packages n\u00e9cessaires : bash npm install react-native-screens react-native-safe-area-context","title":"\u00c9tape 1 : Installation des packages pour les performances"},{"location":"README_/#recommandations-dextensions-pour-visual-studio-code","text":"","title":"Recommandations d'Extensions pour Visual Studio Code"},{"location":"README_/#es7-reactreduxreact-native-snippets","text":"Installation de l'extension : Ouvrez Visual Studio Code. Acc\u00e9dez \u00e0 la section des extensions (vous pouvez utiliser le raccourci Ctrl+Shift+X sur Windows ou Cmd+Shift+X sur macOS). Recherchez l'extension ES7+ React/Redux/React-Native snippets . Cliquez sur \"Install\" pour ajouter l'extension \u00e0 votre \u00e9diteur. Description : Cette extension permet de g\u00e9n\u00e9rer rapidement du code standard pour React, React Native, Redux, et JavaScript moderne. Exemple d'utilisation : Une fois l'extension install\u00e9e, tapez rnfe et appuyez sur Tab pour g\u00e9n\u00e9rer automatiquement un composant fonctionnel de base en React Native. Voici un exemple de code g\u00e9n\u00e9r\u00e9 : ```javascript import React from 'react'; import { View, Text } from 'react-native'; const MyComponent = () => { return ( MyComponent ); }; export default MyComponent; ```","title":"ES7+ React/Redux/React-Native snippets"},{"location":"README_/#gestion-de-lauthentification","text":"","title":"Gestion de l'Authentification"},{"location":"README_/#sources-de-tutoriels-demarrer-un-projet-react-native","text":"Introduction \u00e0 la cr\u00e9ation d'une application mobile avec React Native et Visual Studio Code Cr\u00e9er une App Mobile avec REACT NATIVE pour D\u00e9butant | Tutoriel React Native","title":"Sources de tutoriels d\u00e9marrer un Projet React Native"},{"location":"README_/#autres-sources-demarrer-un-projet-react-native","text":"Documentation de React Native Expo guides \u25ba npx create-expo-app@latest \u25ba npx expo start \u25ba npx expo install expo-router react-native-safe-area-context react-native-screens expo-linking expo-constants expo-status-bar \u25ba npm install react-native-vector-icons --save Installer les d\u00e9pendances avec Expo Design avec React Native Elements Cr\u00e9er des composants avec Tailwind CSS - Tailwind CSS Documentation Markdown Guide","title":"Autres Sources d\u00e9marrer un Projet React Native"},{"location":"Rules_all_with_mkdocs/","text":"Guide Complet pour l'Installation et l'Utilisation de MkDocs Table des Mati\u00e8res Introduction \u00e0 MkDocs Fonctionnalit\u00e9s Principales de MkDocs Commandes et Description Pr\u00e9requis Installation de MkDocs Installation de MkDocs Installation du Th\u00e8me Material (Optionnel) Cr\u00e9er un Nouveau Projet MkDocs Structure d'un Projet MkDocs Configuration du Fichier mkdocs.yml Configuration Basique Navigation Th\u00e8me et Apparence Extensions Markdown Personnalisation avec CSS et JavaScript G\u00e9n\u00e9rer et Visualiser la Documentation Lancer le Serveur de D\u00e9veloppement G\u00e9n\u00e9rer les Fichiers Statics D\u00e9ploiement de la Documentation Conclusion Introduction \u00e0 MkDocs MkDocs est un outil open-source utilis\u00e9 pour g\u00e9n\u00e9rer des sites de documentation statiques \u00e0 partir de fichiers Markdown. Il est simple \u00e0 utiliser, flexible, et offre une configuration minimale via un fichier YAML ou YML. Fonctionnalit\u00e9s Principales de MkDocs Facilit\u00e9 d'utilisation : \u00c9crivez vos documents en Markdown et g\u00e9n\u00e9rez un site complet. Support des th\u00e8mes : Utilisez diff\u00e9rents th\u00e8mes comme le populaire th\u00e8me Material pour personnaliser l'apparence. Navigation automatique : MkDocs organise automatiquement la structure de vos fichiers pour cr\u00e9er des menus de navigation. Extensions Markdown : Ajoutez des fonctionnalit\u00e9s comme les tables des mati\u00e8res, les notes de bas de page, et la coloration syntaxique du code. Commande Commande Description pip install mkdocs Installe MkDocs de base sans th\u00e8me suppl\u00e9mentaire. pip install mkdocs-material Installe le th\u00e8me Material pour MkDocs. mkdocs new my-project Cr\u00e9e un nouveau projet MkDocs dans le r\u00e9pertoire my-project . cd my-project Acc\u00e8de au r\u00e9pertoire du nouveau projet. mkdocs build G\u00e9n\u00e8re les fichiers statiques du site pr\u00eat pour la production. mkdocs serve Lance le serveur de d\u00e9veloppement local pour pr\u00e9visualiser le site MkDocs. Fonctionnalit\u00e9 / Commande Description mkdocs.yml Fichier de configuration principal pour personnaliser MkDocs (titre, th\u00e8me, navigation, etc.). theme: 'material' Ajoute le th\u00e8me Material dans le fichier mkdocs.yml sous la section theme: . nav: D\u00e9finir la navigation du site dans mkdocs.yml pour organiser les pages et chapitres. extra_css: Ajoute des fichiers CSS personnalis\u00e9s pour ajuster le style du site dans mkdocs.yml . extra_javascript: Ajoute des fichiers JavaScript suppl\u00e9mentaires dans mkdocs.yml . pip install mkdocs-material-extensions Installe des extensions pour am\u00e9liorer les fonctionnalit\u00e9s du th\u00e8me Material. mkdocs gh-deploy D\u00e9ploie le site g\u00e9n\u00e9r\u00e9 sur GitHub Pages directement. plugins: Ajoute des plugins dans mkdocs.yml pour des fonctionnalit\u00e9s suppl\u00e9mentaires comme la recherche. docs/ R\u00e9pertoire o\u00f9 placer vos fichiers Markdown qui composeront les pages du site. mkdocs serve --dirtyreload Lance un serveur de d\u00e9veloppement avec rechargement rapide des modifications locales. mkdocs build --clean Supprime les fichiers g\u00e9n\u00e9r\u00e9s pr\u00e9c\u00e9demment et construit \u00e0 nouveau les fichiers du site. Pr\u00e9requis Avant d'installer MkDocs, assurez-vous d'avoir les \u00e9l\u00e9ments suivants install\u00e9s sur votre machine : Python 3.6 ou version ult\u00e9rieure Pip (gestionnaire de paquets Python) Installation de MkDocs 1. Installer MkDocs Pour installer MkDocs, ex\u00e9cutez la commande suivante dans votre terminal ou invite de commandes : pip install mkdocs 2. Installer le Th\u00e8me Material (Optionnel) Le th\u00e8me Material est un des th\u00e8mes les plus utilis\u00e9s avec MkDocs. Pour l'installer, ex\u00e9cutez : pip install mkdocs-material 3. Cr\u00e9er un Nouveau Projet MkDocs Une fois que MkDocs est install\u00e9, vous pouvez cr\u00e9er un nouveau projet en utilisant la commande suivante : mkdocs new mon_projet Cette commande va g\u00e9n\u00e9rer un r\u00e9pertoire mon_projet avec la structure de base suivante : mon_projet/ mkdocs.yml docs/ index.md mkdocs.yml : Le fichier de configuration de MkDocs. docs/ : Ce r\u00e9pertoire contiendra tous vos fichiers Markdown pour la documentation. 4. Structure d'un Projet MkDocs Voici un aper\u00e7u de la structure typique d'un projet MkDocs : mon_projet/ mkdocs.yml # Fichier de configuration principal docs/ # Dossier contenant la documentation index.md # Page d'accueil de votre documentation installation.md guide_utilisation.md reference.md 5. Configuration du Fichier mkdocs.yml 1. Configuration Basique Le fichier mkdocs.yml est o\u00f9 vous d\u00e9finissez la plupart des options de configuration de votre site de documentation. Voici un exemple simple : site_name: Ma Documentation theme: name: readthedocs site_name : Le nom de votre site. theme : D\u00e9finit le th\u00e8me utilis\u00e9 (ici, le th\u00e8me Material). 2. Navigation La navigation dans MkDocs est d\u00e9finie dans la section nav du fichier mkdocs.yml. Vous pouvez cr\u00e9er des menus avec plusieurs niveaux : nav: - Accueil: index.md - Guide: - Installation: installation.md - Utilisation: guide_utilisation.md - R\u00e9f\u00e9rence: reference.md 3. Th\u00e8me et Apparence Vous pouvez personnaliser le th\u00e8me et l'apparence de votre site en modifiant le fichier mkdocs.yml : theme: name: readthedocs palette: primary: 'indigo' accent: 'pink' 4. Extensions Markdown MkDocs supporte plusieurs extensions Markdown qui ajoutent des fonctionnalit\u00e9s suppl\u00e9mentaires : markdown_extensions: - toc: # G\u00e9n\u00e8re des tables des mati\u00e8res automatiques permalink: true - admonition # Permet l'ajout de blocs de texte attentionnels (ex. info, warning) - codehilite # Coloration syntaxique pour les blocs de code 5. Personnalisation avec CSS et JavaScript Vous pouvez \u00e9galement ajouter des fichiers CSS ou JavaScript personnalis\u00e9s : extra_css: - 'css/custom.css' extra_javascript: - 'js/custom.js' 6. G\u00e9n\u00e9rer et Visualiser la Documentation 1. Lancer le Serveur de D\u00e9veloppement Pour voir votre documentation en cours de d\u00e9veloppement, lancez le serveur de d\u00e9veloppement local : mkdocs serve Cela lancera un serveur \u00e0 l'adresse http://127.0.0.1:8000/, o\u00f9 vous pourrez voir les changements en temps r\u00e9el. 2. G\u00e9n\u00e9rer les Fichiers Statics Lorsque vous \u00eates pr\u00eat \u00e0 d\u00e9ployer votre site, g\u00e9n\u00e9rez les fichiers statiques en ex\u00e9cutant : mkdocs build Cela cr\u00e9era un r\u00e9pertoire site/ contenant les fichiers HTML statiques. D\u00e9ploiement de la Documentation Vous pouvez d\u00e9ployer votre documentation g\u00e9n\u00e9r\u00e9e sur n'importe quel serveur d'h\u00e9bergement de sites statiques. Si vous utilisez GitHub Pages, voici comment faire : 3. Initialisez un d\u00e9p\u00f4t Git dans votre projet Ajoutez vos fichiers et validez les changements : git add . git commit -m \"Ajout de la documentation\" 4. D\u00e9ployez sur GitHub Pages avec la commande suivante mkdocs gh-deploy Cela publiera votre site directement sur GitHub Pages. Conclusion MkDocs est un outil simple et puissant pour cr\u00e9er de la documentation statique. Gr\u00e2ce \u00e0 sa facilit\u00e9 d'installation et \u00e0 sa flexibilit\u00e9 via les fichiers Markdown, il est id\u00e9al pour documenter des projets de toutes tailles. Vous pouvez approfondir votre utilisation en explorant les diff\u00e9rentes options et th\u00e8mes disponibles, ainsi que les documents officiels de MkDocs.","title":"Un pour les gouverner tous! \u27a0 mkdocs"},{"location":"Rules_all_with_mkdocs/#guide-complet-pour-linstallation-et-lutilisation-de-mkdocs","text":"","title":"Guide Complet pour l'Installation et l'Utilisation de MkDocs"},{"location":"Rules_all_with_mkdocs/#table-des-matieres","text":"Introduction \u00e0 MkDocs Fonctionnalit\u00e9s Principales de MkDocs Commandes et Description Pr\u00e9requis Installation de MkDocs Installation de MkDocs Installation du Th\u00e8me Material (Optionnel) Cr\u00e9er un Nouveau Projet MkDocs Structure d'un Projet MkDocs Configuration du Fichier mkdocs.yml Configuration Basique Navigation Th\u00e8me et Apparence Extensions Markdown Personnalisation avec CSS et JavaScript G\u00e9n\u00e9rer et Visualiser la Documentation Lancer le Serveur de D\u00e9veloppement G\u00e9n\u00e9rer les Fichiers Statics D\u00e9ploiement de la Documentation Conclusion","title":"Table des Mati\u00e8res"},{"location":"Rules_all_with_mkdocs/#introduction-a-mkdocs","text":"MkDocs est un outil open-source utilis\u00e9 pour g\u00e9n\u00e9rer des sites de documentation statiques \u00e0 partir de fichiers Markdown. Il est simple \u00e0 utiliser, flexible, et offre une configuration minimale via un fichier YAML ou YML.","title":"Introduction \u00e0 MkDocs"},{"location":"Rules_all_with_mkdocs/#fonctionnalites-principales-de-mkdocs","text":"Facilit\u00e9 d'utilisation : \u00c9crivez vos documents en Markdown et g\u00e9n\u00e9rez un site complet. Support des th\u00e8mes : Utilisez diff\u00e9rents th\u00e8mes comme le populaire th\u00e8me Material pour personnaliser l'apparence. Navigation automatique : MkDocs organise automatiquement la structure de vos fichiers pour cr\u00e9er des menus de navigation. Extensions Markdown : Ajoutez des fonctionnalit\u00e9s comme les tables des mati\u00e8res, les notes de bas de page, et la coloration syntaxique du code.","title":"Fonctionnalit\u00e9s Principales de MkDocs"},{"location":"Rules_all_with_mkdocs/#commande","text":"Commande Description pip install mkdocs Installe MkDocs de base sans th\u00e8me suppl\u00e9mentaire. pip install mkdocs-material Installe le th\u00e8me Material pour MkDocs. mkdocs new my-project Cr\u00e9e un nouveau projet MkDocs dans le r\u00e9pertoire my-project . cd my-project Acc\u00e8de au r\u00e9pertoire du nouveau projet. mkdocs build G\u00e9n\u00e8re les fichiers statiques du site pr\u00eat pour la production. mkdocs serve Lance le serveur de d\u00e9veloppement local pour pr\u00e9visualiser le site MkDocs. Fonctionnalit\u00e9 / Commande Description mkdocs.yml Fichier de configuration principal pour personnaliser MkDocs (titre, th\u00e8me, navigation, etc.). theme: 'material' Ajoute le th\u00e8me Material dans le fichier mkdocs.yml sous la section theme: . nav: D\u00e9finir la navigation du site dans mkdocs.yml pour organiser les pages et chapitres. extra_css: Ajoute des fichiers CSS personnalis\u00e9s pour ajuster le style du site dans mkdocs.yml . extra_javascript: Ajoute des fichiers JavaScript suppl\u00e9mentaires dans mkdocs.yml . pip install mkdocs-material-extensions Installe des extensions pour am\u00e9liorer les fonctionnalit\u00e9s du th\u00e8me Material. mkdocs gh-deploy D\u00e9ploie le site g\u00e9n\u00e9r\u00e9 sur GitHub Pages directement. plugins: Ajoute des plugins dans mkdocs.yml pour des fonctionnalit\u00e9s suppl\u00e9mentaires comme la recherche. docs/ R\u00e9pertoire o\u00f9 placer vos fichiers Markdown qui composeront les pages du site. mkdocs serve --dirtyreload Lance un serveur de d\u00e9veloppement avec rechargement rapide des modifications locales. mkdocs build --clean Supprime les fichiers g\u00e9n\u00e9r\u00e9s pr\u00e9c\u00e9demment et construit \u00e0 nouveau les fichiers du site.","title":"Commande"},{"location":"Rules_all_with_mkdocs/#prerequis","text":"Avant d'installer MkDocs, assurez-vous d'avoir les \u00e9l\u00e9ments suivants install\u00e9s sur votre machine : Python 3.6 ou version ult\u00e9rieure Pip (gestionnaire de paquets Python)","title":"Pr\u00e9requis"},{"location":"Rules_all_with_mkdocs/#installation-de-mkdocs","text":"","title":"Installation de MkDocs"},{"location":"Rules_all_with_mkdocs/#1-installer-mkdocs","text":"Pour installer MkDocs, ex\u00e9cutez la commande suivante dans votre terminal ou invite de commandes : pip install mkdocs","title":"1. Installer MkDocs"},{"location":"Rules_all_with_mkdocs/#2-installer-le-theme-material-optionnel","text":"Le th\u00e8me Material est un des th\u00e8mes les plus utilis\u00e9s avec MkDocs. Pour l'installer, ex\u00e9cutez : pip install mkdocs-material","title":"2. Installer le Th\u00e8me Material (Optionnel)"},{"location":"Rules_all_with_mkdocs/#3-creer-un-nouveau-projet-mkdocs","text":"Une fois que MkDocs est install\u00e9, vous pouvez cr\u00e9er un nouveau projet en utilisant la commande suivante : mkdocs new mon_projet Cette commande va g\u00e9n\u00e9rer un r\u00e9pertoire mon_projet avec la structure de base suivante : mon_projet/ mkdocs.yml docs/ index.md mkdocs.yml : Le fichier de configuration de MkDocs. docs/ : Ce r\u00e9pertoire contiendra tous vos fichiers Markdown pour la documentation.","title":"3. Cr\u00e9er un Nouveau Projet MkDocs"},{"location":"Rules_all_with_mkdocs/#4-structure-dun-projet-mkdocs","text":"Voici un aper\u00e7u de la structure typique d'un projet MkDocs : mon_projet/ mkdocs.yml # Fichier de configuration principal docs/ # Dossier contenant la documentation index.md # Page d'accueil de votre documentation installation.md guide_utilisation.md reference.md","title":"4. Structure d'un Projet MkDocs"},{"location":"Rules_all_with_mkdocs/#5-configuration-du-fichier-mkdocsyml","text":"","title":"5. Configuration du Fichier mkdocs.yml"},{"location":"Rules_all_with_mkdocs/#1-configuration-basique","text":"Le fichier mkdocs.yml est o\u00f9 vous d\u00e9finissez la plupart des options de configuration de votre site de documentation. Voici un exemple simple : site_name: Ma Documentation theme: name: readthedocs site_name : Le nom de votre site. theme : D\u00e9finit le th\u00e8me utilis\u00e9 (ici, le th\u00e8me Material).","title":"1. Configuration Basique"},{"location":"Rules_all_with_mkdocs/#2-navigation","text":"La navigation dans MkDocs est d\u00e9finie dans la section nav du fichier mkdocs.yml. Vous pouvez cr\u00e9er des menus avec plusieurs niveaux : nav: - Accueil: index.md - Guide: - Installation: installation.md - Utilisation: guide_utilisation.md - R\u00e9f\u00e9rence: reference.md","title":"2. Navigation"},{"location":"Rules_all_with_mkdocs/#3-theme-et-apparence","text":"Vous pouvez personnaliser le th\u00e8me et l'apparence de votre site en modifiant le fichier mkdocs.yml : theme: name: readthedocs palette: primary: 'indigo' accent: 'pink'","title":"3. Th\u00e8me et Apparence"},{"location":"Rules_all_with_mkdocs/#4-extensions-markdown","text":"MkDocs supporte plusieurs extensions Markdown qui ajoutent des fonctionnalit\u00e9s suppl\u00e9mentaires : markdown_extensions: - toc: # G\u00e9n\u00e8re des tables des mati\u00e8res automatiques permalink: true - admonition # Permet l'ajout de blocs de texte attentionnels (ex. info, warning) - codehilite # Coloration syntaxique pour les blocs de code","title":"4. Extensions Markdown"},{"location":"Rules_all_with_mkdocs/#5-personnalisation-avec-css-et-javascript","text":"Vous pouvez \u00e9galement ajouter des fichiers CSS ou JavaScript personnalis\u00e9s : extra_css: - 'css/custom.css' extra_javascript: - 'js/custom.js'","title":"5. Personnalisation avec CSS et JavaScript"},{"location":"Rules_all_with_mkdocs/#6-generer-et-visualiser-la-documentation","text":"","title":"6. G\u00e9n\u00e9rer et Visualiser la Documentation"},{"location":"Rules_all_with_mkdocs/#1-lancer-le-serveur-de-developpement","text":"Pour voir votre documentation en cours de d\u00e9veloppement, lancez le serveur de d\u00e9veloppement local : mkdocs serve Cela lancera un serveur \u00e0 l'adresse http://127.0.0.1:8000/, o\u00f9 vous pourrez voir les changements en temps r\u00e9el.","title":"1. Lancer le Serveur de D\u00e9veloppement"},{"location":"Rules_all_with_mkdocs/#2-generer-les-fichiers-statics","text":"Lorsque vous \u00eates pr\u00eat \u00e0 d\u00e9ployer votre site, g\u00e9n\u00e9rez les fichiers statiques en ex\u00e9cutant : mkdocs build Cela cr\u00e9era un r\u00e9pertoire site/ contenant les fichiers HTML statiques. D\u00e9ploiement de la Documentation Vous pouvez d\u00e9ployer votre documentation g\u00e9n\u00e9r\u00e9e sur n'importe quel serveur d'h\u00e9bergement de sites statiques. Si vous utilisez GitHub Pages, voici comment faire :","title":"2. G\u00e9n\u00e9rer les Fichiers Statics"},{"location":"Rules_all_with_mkdocs/#3-initialisez-un-depot-git-dans-votre-projet","text":"Ajoutez vos fichiers et validez les changements : git add . git commit -m \"Ajout de la documentation\"","title":"3. Initialisez un d\u00e9p\u00f4t Git dans votre projet"},{"location":"Rules_all_with_mkdocs/#4-deployez-sur-github-pages-avec-la-commande-suivante","text":"mkdocs gh-deploy Cela publiera votre site directement sur GitHub Pages.","title":"4. D\u00e9ployez sur GitHub Pages avec la commande suivante"},{"location":"Rules_all_with_mkdocs/#conclusion","text":"MkDocs est un outil simple et puissant pour cr\u00e9er de la documentation statique. Gr\u00e2ce \u00e0 sa facilit\u00e9 d'installation et \u00e0 sa flexibilit\u00e9 via les fichiers Markdown, il est id\u00e9al pour documenter des projets de toutes tailles. Vous pouvez approfondir votre utilisation en explorant les diff\u00e9rentes options et th\u00e8mes disponibles, ainsi que les documents officiels de MkDocs.","title":"Conclusion"}]}